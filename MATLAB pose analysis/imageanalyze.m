function pose = imageanalyze(I)

%I = importTIF('images/Series2/Series2_6.tif');
%I = I(:,:,1);
%I = imcomplement(im2bw(imread('images/finger-bw.jpg')));

imshow(I,[]);
I = im2bw(I);

%{
%corner_topright = [253 164cl];   %generated by hand or from green points
%corner_bottomright = [253 135];

contours = bwboundaries(I); %find finger boundary
contour = contours{1};
contour = contour(1:end-1,:); %last row is repeat of first


hold on
plot(contour(:,2),contour(:,1),'g','LineWidth',2);


%find left corners
column1_contour = contour(contour(:,2) == 1,1);
corner_topleft = [min(column1_contour), 1];
corner_bottomleft = [max(column1_contour), 1];

%split contour into top and bottom
[~,ind_topleft] = ismember(corner_topleft,contour,'rows');
[~,ind_topright] = ismember(corner_topright,contour,'rows');
[~,ind_bottomleft] = ismember(corner_bottomleft,contour,'rows');
[~,ind_bottomright] = ismember(corner_bottomright,contour,'rows');

contour_top = contour(ind_topleft:ind_topright,:);
contour_bottom = contour(ind_bottomright:ind_bottomleft,:);

 
plot(contour_top(:,2),contour_top(:,1),'r','LineWidth',2);
plot(contour_bottom(:,2),contour_bottom(:,1),'r','LineWidth',2);

%}

contours = bwboundaries(I,8);

%split each in half
contours{2} = contours{2}(1:round(size(contours{2},1)/2),:);
contours{3} = contours{3}(1:round(size(contours{3},1)/2),:);

%reorder to start from topleft
if(contours{2}(1,1)>contours{2}(end,1))
    contours{2} = contours{2}(end:-1:1,:);
end
   
if(contours{3}(1,1)>contours{3}(end,1))
    contours{3} = contours{3}(end:-1:1,:);
end

%assign top and bottom
if (contours{2}(1,1)>contours{3}(1,1))
    contour_top = contours{3};
    contour_bottom = contours{2};
else
    contour_top = contours{2};
    contour_bottom = contours{3};
end



hold on

plot(contour_top(:,2),contour_top(:,1),'r','LineWidth',2);
plot(contour_bottom(:,2),contour_bottom(:,1),'r','LineWidth',2);

%find midpoints between each pixel on one side and the closest pixel on the other
RESOLUTION = 1; %changing this isn't supported yet
skeleton = zeros(size(contour_top)); %contains midpoints of crossbars

for top_ind = 1:RESOLUTION:size(contour_top,1) %for every RESOLUTION pixels on top
    dist_sq = zeros(1,size(contour_bottom,1));
    for bottom_ind = 1:size(contour_bottom,1)
        dist_sq(bottom_ind) =  (contour_top(top_ind,1)-contour_bottom(bottom_ind,1))^2 ...
                              +(contour_top(top_ind,2)-contour_bottom(bottom_ind,2))^2;
    end
    [~,bottom_ind] = min(dist_sq);%find shortest distance
    skeleton(top_ind,:) = [(contour_top(top_ind,1)+contour_bottom(bottom_ind,1))/2, ...
                           (contour_top(top_ind,2)+contour_bottom(bottom_ind,2))/2];
    line([contour_top(top_ind,2),contour_bottom(bottom_ind,2)], ...
         [contour_top(top_ind,1),contour_bottom(bottom_ind,1)],'Color','b');
end

plot(skeleton(:,2),skeleton(:,1),'r','LineWidth',2);


N = 20;
%parametrize skeleton for distance
dists = [0 ; cumsum(hypot(diff(skeleton(:,1)), diff(skeleton(:,2))))];
len = dists(end); %total skeleton length

%interpolate skeleton for normalized distance
norm_skeleton = interp1(dists,skeleton,(0:len/N:len));
plot(norm_skeleton(:,2),norm_skeleton(:,1),'g*','LineWidth',2);

%generate pose
pose = zeros(1,N);
%pose(1) = atan2((norm_skeleton(2,1)-norm_skeleton(1,1)),(norm_skeleton(2,2)-norm_skeleton(1,2)));
for i = 1:N %make absolute pose
    pose(i) = atan2((norm_skeleton(i+1,1)-norm_skeleton(i,1)),(norm_skeleton(i+1,2)-norm_skeleton(i,2)));
end
pose = [pose(1),diff(pose)];
pose = mod(pose,2*pi);
pose(pose>pi) = pose(pose>pi)-2*pi; %normalize to +-pi

hold off
%{
figure(2)
%DIFFERENCE FROM SINGLE IMAGEANALYZE: order of contour
width = hypot(contour_top(1,1)-contour_bottom(1,1),contour_top(1,2)-contour_bottom(1,2));
finger.origin=[0 0 0]; finger.angle=0; finger.up=0; finger.len = len; finger.height = width; finger.width = width;
fingerdraw(finger,pose);
axis equal
%}
pose_deg = pose/pi*180;

